evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x) x[1], c(8, 4, 0))
evaluate(function(x) x[-1], c(8, 4, 0))
evaluate(function(x) x[length(x)], c(8, 4, 0))
evaluate(function(x) {a<-length(x); x[a]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("i'm fine")
submit()
mad_libs(chicago, bad, students)
mad_libs(place=chicago, adjective=bad, noun=students)
mad_libs("chicago", "bad", "students")
submit()
"I"%p%"love"%p%"R"
"I"%p%"love"%p%"R!"
a<<-4
a
ls()
aa<<-6
ls()
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set <- function(y) {
x<<-y
inv<<-NULL
}
get <- function () x
setinv <- function(inv_m) inv <<- inv_m
getinv <- function() inv
list(set=set, get=get, setmean=setmean, getmean=getmean)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)){
message("getting cached inverse matrix")
return(inv)
else{
m <- x$get()
inv <- solve(m)
x$setinv(inv)
inv
}
}
}
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set <- function(y) {
x<<-y
inv<<-NULL
}
get <- function () x
setinv <- function(inv_m) inv <<- inv_m
getinv <- function() inv
list(set=set, get=get, setmean=setmean, getmean=getmean)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)){
message("getting cached inverse matrix")
return(inv)
}
else{
m <- x$get()
inv <- solve(m)
x$setinv(inv)
inv
}
}
m1<-matrix(c(2,3,5,8), 2, 2)
cm <- makeCacheMatrix(m1)
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set <- function(y) {
x<<-y
inv<<-NULL
}
get <- function () x
setinv <- function(inv_m) inv <<- inv_m
getinv <- function() inv
list(set=set, get=get, setinv=setinv, getinv=getinv)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)){
message("getting cached inverse matrix")
return(inv)
}
else{
m <- x$get()
inv <- solve(m)
x$setinv(inv)
inv
}
}
cm <- makeCacheMatrix(m1)
cacheSolve(cm)
cacheSolve(cm)
library(swirl)
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set <- function(y) {
x<<-y
inv<<-NULL
}
get <- function () x
setinv <- function(inv_m) inv <<- inv_m
getinv <- function() inv
list(set=set, get=get, setinv=setinv, getinv=getinv)
}
## Write a short comment describing this function
## This function compute the inverse of the special matrix returned from
## above function. If the inverse already exists, then the function will just
## retrive it from the cache
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)){
message("getting cached inverse matrix")
return(inv)
}
else{
m <- x$get()
inv <- solve(m)
x$setinv(inv)
inv
}
}
a<-matrix(c(2,3,5,6),2,2)
a
solve(a)
cacheSolve(a)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
b
cacheSolve(b)
a
a<-matrix(c(2,3,5,8),2,2)
cacheSolve(b)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
b<-makeCacheMatrix(a)
cacheSolve(b)
b$get()
b$getinv()
?gl
getwd()
setwd("~/Documents/R_programs/coursera")
dir()
setwd("R")
dir()
setwd("rprog_data_ProgAssignments3-data")
dir()
source("best.R")
best("AL", "heart")
best("AL", "heart failure")
summary(h_data)
h_data<-read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(h_data[,7],)
tail(h_data[,7],)
a<-which((h_data[,7],)=="AL")
a<-which(h_data[,7]=="AL")
length(a)
head(a)
al<-h_data[a,]
dim(al)
names(al)
al[,c(11,17,23)]
min(al[,c(11,17,23)])
min(al[,c(11)])
max(al[,c(11)])
max(al[,c(11)], na.rm=TRUE)
?max
class(al[,11])
max(as.numeric(al[,c(11))], na.rm=TRUE)
max(as.numeric(al[,c(11)]), na.rm=TRUE)
as.numeric(al[,c(11)])
sum(is.na(as.numeric(al[,c(11)])))
sum(al[,c(11)] == "Not Available")
h_data<-read.csv("outcome-of-care-measures.csv")
class(h_data[,11])
head(h_data[,11])
al<-h_data[which(h_data[,7]=="AL"),]
nrow(al)
sum(al[,11]=="Not Available")
h_data<-read.csv("outcome-of-care-measures.csv", colClasses = "character")
tolower("Abv")
min(as.numeric(h_data[1:98, 7]))
head(h_data[1:98, 7])
h_data[,7]
h_data<-read.csv("outcome-of-care-measures.csv", colClasses = "character")
dim(h_data)
h_data[1,7]
h_data[12,7]
h_data[12,11]
which.min
?which.min
best("TX", "heart attack")
a<-best("TX", "heart attack")
a
state="AL"
col_no=11
state
dim(h_data)
h_min <- which.min(min(as.numeric(h_data[which(h_data[,7]==state),col_no])))
h_min <- which.min(as.numeric(h_data[which(h_data[,7]==state),col_no]))
h_min
h_data[h_min, 2]
h_min <- which.min(as.numeric(h_data[which(h_data[,7]==state),col_no]), na.rm=TRUE)
h_min <- which.min(as.numeric(h_data[which(h_data[,7]==state),col_no]))
best("TX", "heart attack")
a<-best("TX", "heart attack")
a
source("best.R")
best("TX", "heart attack")
h_d<-read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<-"TX"
outcome <- "heart attack"
h_m <- which.min(h_d[which(h_d[,7]==state), 11])
h_m
s<-h_d[which(h_d[,7]==state),]
nrow(s)
which.min(s[,11])
s[210,11]
s[210,2]
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
?as.numeric
best("TX", "heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","pneumonia")
best("NY","peumonia")
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
source("best.R")
best("NY","hert attack")
best("BB","heart attack")
best("MD","heart attack")
best("MD","pneumonia")
best("TX","heart failure")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","pneumonia")
best("MD","heart attack")
best("BB","heart attack")
best("NY","hert attack")
dir()
data <- read.csv("outcome-of-care-measures.csv"
)
dim(data())
dim(data)
names(data)
?order
all_data <- read.csv("outcome-of-care-measures.csv")
s_data <- all_data[which(all_data[,7]=="TX"),]
s_data2 <- s_data[which(s_data[,11]!="Not Available"),]
s_data2_ranked <- s_data2[rank(s_data2[,11]),]
dim(s_data2_ranked)
dim(s_data2)
head(s_data2_ranked)
head(s_data2_ranked[,11])
all_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
s_data <- all_data[which(all_data[,7]=="TX"),]
s_data2 <- s_data[which(s_data[,11]!="Not Available"),]
s_data2_ranked <- s_data2[rank(s_data2[,11]),]
dim(s_data2)
dim(s_data2_ranked)
head(s_data2_ranked[,11])
head(s_data2[,11])
s_data2_ranked <- s_data2[rank(s_data2[,11]),]
a<-rank(s_data2[,11])
head(a)
?rank
a<-rank(s_data2[,11], ties.method=first)
a<-rank(s_data2[,11], ties.method="first")
length(a)
rank(x1 <- c(3, 1, 4, 15, 92))
b<-s_data2[a,11]
head(b)
a<-rank(as.numeric(s_data2[,11]), ties.method="first")
head(a)
b<-s_data2[a,11]
head(b)
c<-c("15.9", "16.2", "16.4", "15.2", "15.0", "15.7")
rank(c)
sort(c)
b<-sort(s_data2[,11])
head(b)
tail(b)
?sort
?order
order(c)
c(order(c))
c
c[order(c)]
dir()
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
all_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
s_data <- all_data[which(all_data[,7]=="TX"),]
s_data[1:5, c(7, 11)]
s_data2 <- s_data[which(s_data[,col_no]!="Not Available"),]
s_data2 <- s_data[which(s_data[,col_no]!="Not Available"),]
s_data2[1:5, c(7, 11)]
s_data2_ordered <- s_data2[order(s_data2[,col_no]), ]
s_data2_ordered[1:10, c(2,17)]
s_data2 <- s_data[which(s_data[,17]!="Not Available"),]
s_data2_ordered <- s_data2[order(s_data2[,17]), ]
s_data2_ordered[1:10, c(2,17)]
which(s_data2_ordered[, 2] == "DETAR HOSPITAL NAVARRO")
s_data2_ordered[253, c(2,17)]
head(s_data2, 1:3)
head(s_data2[], 1:3])
head(s_data2[, 1:3])
s_data2_ordered[1:300, c(2,17)]
s_data2_ordered <- s_data2[order(as.numeric(s_data2[,col_no]), ]
s_data2_ordered <- s_data2[order(as.numeric(s_data2[,col_no])), ]
nrow(s_data2)
s_data2[, c(2,17)]
s_data2_ordered <- s_data2[order(as.numeric(s_data2[,17])), ]
s_data2_ordered[4,2]
s_data2_ordered[,c(2,17)]
rank(s_data2_ordered[, 17])
rank(s_data2_ordered[, c(2,17)])
s_data2_ordered[1:5, c(2,17)]
s_data2_ordered[4, c(2,17)]
s_data2_ordered <- s_data2[order(as.numeric(s_data2[,17]), s_data2[,2]), ]
s_data2_ordered[4, c(2,17)]
s_data2_ordered[1:8, c(2,17)]
s_data2_ordered[4, c(2,17)]
dir()
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
all_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
class(all_data[,7])
s<-factor(all_data[,7])
s
r<-tapply(all_data, factor(all_data[,7]),
dir()
)
dir()
source("rankall.R")
rankall("heart attack", "best")
source("rankall.R")
rankall("heart attack", "best")
test<-tapply(all_data, as.factor(all_data[,7]), function(s_data) {nrow(s_data)})
s<-factor(all_data[,7])
test<-tapply(all_data, s, function(s_data) {nrow(s_data)})
length(s)
nrow(all_data)
test<-tapply(all_data[,col_no], s, function(s_data) {nrow(s_data)})
test
test<-tapply(all_data[,col_no], s, function(s_data) {length(s_data)})
test
test<-tapply(all_data[,11], s, function(s_data) {length(s_data)})
test
test<-tapply(all_data[,11], s, function(s_data) {s_data2<-s_data[which(s_data!="Not Available")]; length(s_data2)})
test
test<-tapply(all_data[,c(2, 11)], s, function(s_data) {s_data2<-s_data[which(s_data!="Not Available")]; })
names(all_data)
source("rankall.R")
rankall("heart attack", "best")
a<-rankall("heart attack", "best")
a
a<-rankall("heart failure", "best")
a
a<-rankall("heart failure", "worst")
a
a<-rankall("heart failure", 4)
a
all_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
tapply(all_data[, 11], as.factor(all_data[, 7]), function(s_data) {}
s_data2 <- s_data[which(s_data != "Not Available")]
tapply(all_data[, 11], as.factor(all_data[, 7]), function(s_data) {}
s_data2 <- s_data[which(s_data != "Not Available")]
a<-tapply(all_data[, 11], as.factor(all_data[, 7]), function(s_data) {s_data2 <- s_data[which(s_data != "Not Available")]; all_data[which.min(s_data2), c(2,7)]}
)
a
states_data<-split(all_data, all_data$state)
s
states_data<-split(all_data, s)
class(states_data)
length(states_data)
head(states_data)
names(states_data)
states_data$TX
length(states_data$TX)
class(states_data$TX)
dim(states_data$TX)
all_data$State
source("rankall.R")
re<-rankall("heart attack", "best")
head(re)
data.frame(re)
head(data.frame(re))
names(re)
data.frame(hospital=re, state=names(re))
head(data.frame(hospital=re, state=names(re)))
a<-data.frame(hospital=re, state=names(re))
dim(a)
a[1,1]
a<-data.frame(hospital=re[[1]], state=names(re))
dim(a)
head(a)
a<-as.data.frame(re)
head(a)
re[1]
re[2]
re[[2]
]
length(re)
class(re)
a<-data.frame(hospital=sapply(re, function(x) x[[1]], state=names(re))
)
a<-data.frame(hospital=sapply(re, function(x) x[[1]]), state=names(re))
a
head(a)
re$1
re[1]
names(re[1])
dir(0)
dir()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
dir()
source("rankhospital.R")
rankhospital("WI", "heart failure", "best")
all_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
s_data <- all_data[which(all_data[,7]=="WI"),
]
s_data <- all_data[which(all_data[,7]=="WI"),]
s_data2 <- s_data[which(s_data[,17]!="Not Available"),]
s_data2[which.min(s_data2[,17]),2]
s_data2_ordered <- s_data2[order(as.numeric(s_data2[,17]), s_data2[,2]), ]
s_data2_ordered[1:10, 2]
dim(re)
ls()
dim(all_data)
all_data[-1,1]
source("rankhospital.R")
rankhospital("WI", "heart failure", "best")
rankhospital("WI", "heart failure", 1)
rankhospital("WI", "heart failure", 2)
source("rankall.R")
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
dir()
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
